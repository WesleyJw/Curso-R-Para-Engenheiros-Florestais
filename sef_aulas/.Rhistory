ex1 <- seq(0, 10, 0.2)
length(ex1)
altura <- c(1.82, 1.92, 1.61, 1.68, 1.62)
1altura <- 1.92
altura1 <- 1.92
Altura <- c(1.82, 1.92, 1.61, 1.68, 1.62)
#remover
rm(Altura)
altura_jesse <- 1.92
altura.poli <- 1.61
altura.poli = 1.61
1.61 -> poli
#verificar o tipo de uma variavel
is.numeric(poli)
is.character(poli)
as.character(poli)
poli1 <- as.character(poli)
is.numeric(poli1)
#vetor
altura <- c(1.82, 1.92, 1.61, 1.68, 1.62)
nomes <- c("wesley", "jesse", "poli",
"isa", "pedro")
nome.alt <- c("wesley", 1.82, "jesse", 1.92,
"poli", 1.61, "isa", 1.68,
"pedro", 1.62)
is.numeric(nome.alt)
length(nome.alt)
nome.alt
nome.alt[7]
nome.alt[7:8]
nome.alt[7,8]
nome.alt[c(7,8)]
1:10
nome.alt[7:8]
nome.alt[c(7, 8, 3, 4)]
nome.alt[7:8
]
#matriz
m1 <- matrix(data = 1:9, nrow = 3, ncol = 3)
m1
colnames(m1) <- c("C1", "C2", "C3")
m1
colSums(m1)
m1
colSums(m1)
m1 * 2
v1 <- c(2,3,4)
m1 * v1
m1 %*% v1
m1 * v1
m1 %*% v1
diag(m1)
solve(m1)
#matriz
m1 <- matrix(data = c(3,4,2,5,7,8,2,5,4), nrow = 3, ncol = 3)
solve(m1)
ar1 <- array(1:24, dim = c(3, 4, 2))
ar1
#lista
l1 <- list(1, 2, 3)
l1
list.nomes <- list(nomes, altura)
list.nomes
list.nomes <- list(nome = nomes, alt = altura)
list.nomes
list.nomes$alt
list.nomes$alt[3]
#dataframe
df1 <- data.frame(nome = nomes, alt = altura)
df1
str(df1)
summary(df1)
df1$alt
df1$alt[5]
head(df1)
head(df1, 3)
tail(df1, 2)
names(df1)
#operadores logicos
2==2 #igual
2 > 3
2 < 3
2 >= 2
3 <= 3
3 != 3
(2 == 2) & (3 != 1)
(2 == 2) & (3 != 3)
(2 == 2) | (3 != 3)
#Start R
df1
#Start R
max(df1$alt)
df1$alt
cv.alt <- sd(df1$alt)/mean(df1$alt) * 100
cv.alt
round(cv.alt, 4)
round(cv.alt, 2)
ceiling(cv.alt)
df1
df1[order(df1$alt)]
df1[,order(df1$alt)]
rank(df1$alt)
df1$alt
?rank
rank(df1$alt)
rank(df1$alt)
df1$alt
order(df1$alt)
df1
df1[order(df1$alt),]
df1[order(df1$alt),]
df1[desc(order(df1$alt)),]
df1[(desc(df1$alt)),]
df1[sort(order(df1$alt)),]
df1[order(df1$alt, decreasing = T),]
dados <- read.csv("dataset/base_dados.csv", header = T,
sep = ",", dec = ".")
dados
head(dados)
tail(dados)
str(dados)
head(dados)
dados$tratamento <- paste(dados$espacamento, dados$clone,
sep = "")
head(dados)
head(dados)
write.csv(dados, "dataset/nova_base_dados.csv", row.names = F)
dados[,5:6]
dados[,5:6]
#Apply
apply(dados[,5:6], 2, mean)
#Apply
apply(dados[,5:6], 1, mean)
#Apply
apply(dados[,5:6], 2, mean)
tapply(dados$altura, dados$espacamento, mean)
#dplyr
library(dplyr)
df.e1 <- filter(dados, (espacamento == "E1"))
df.e1
df.e1e4 <- filter(dados, (espacamento == "E1" & espacamento == "E2"))
df.e1e4
df.e1e4 <- filter(dados, ((espacamento == "E1") & (espacamento == "E2")))
df.e1e4
df.e1e4 <- filter(dados, ((espacamento == "E1") | (espacamento == "E4")))
df.e1e4
df.e1e4 <- filter(dados, ((espacamento == "E1") && (espacamento == "E4")))
df.e1e4
df.e1e4 <- filter(dados, ((espacamento == "E1") & (espacamento == "E4")))
df.e1e4
df.e1e4 <- filter(dados, ((espacamento == "E1") | (espacamento == "E4")))
df.e1e4
df.e2c2 <- dados %>%
filter(espacamento == "E2") %>%
filter(clone == "C2")
df.e2c2
df2 <- dados %>%
select(espacamento, clone, altura, dap)
head(df2)
dados
#mutate
df3 <- dados %>%
mutate(volume = dap^2*pi/40000*altura*0.51)
head(df3)
head(dados)
#dplyr
library(dplyr)
#uso da funcao arrange
View(dados)
df4 <- dados %>%
arrange(arvoresh)
head(df4)
head(df4)
head(dados)
head(df4)
df4.1 <- df4 %>%
arrange(desc(dap))
head(df4.1)
View(df4.1)
unique(c("A", "B", "C", "A", "B", "B"))
#summarise
df5 <- dados %>%
group_by(espacamento, clone) %>%
summarise(arvoresh = unique(arvoresh), med_alt = mean(altura),
med_dap = mean(dap), sd_alt = sd(altura), sd_dap = sd(dap))
View(df5)
dados2 <- read.csv("dataset/base_dados.csv", header = T, sep = ",", dec = ".")
dados2 <- read.csv("dataset/base_dados.csv", header = T, sep = ",", dec = ".")
View(dados2)
View(dados)
df5
sink("dataset/resumo_estatistico.doc")
df5
sink()
df5
#tidyr
library(tidyr)
#spread
df6 <- df5 %>%
select(espacamento, clone, med_alt) %>%
spread(clone, med_alt)
View(df6)
#gather
df7 <- df6 %>%
gather(clone, med_alt, -1:-2)
View(df7)
#gather
df7 <- df6 %>%
gather(clone, med_alt, -1-2)
#gather
df7 <- df6 %>%
gather(clone, med_alt, -1,-2)
View(df7)
#gather
df7 <- df6 %>%
gather(clone, med_alt, c(-2,-1))
View(df7)
#gather
df7 <- df6 %>%
gather(clone, med_alt, -2:-1)
View(df7)
#gather
df7 <- df6 %>%
gather(clone, med_alt, 1:2)
View(df7)
#gather
df7 <- df6 %>%
gather(clone, med_alt, 2:3)
View(df7)
a <- 10
b <- 5
if(a > b) print("Hello World!")
a <- 10
b <- 5
if(a <= b) {
print("Continuar aula...")
}else{
print("Vamos coffe brake...")
}
#while
a <- 0
while(a <= 10){
b <- a * 2
print(2)
}
while(a <= 10){
b <- a * 2
print(b)
}
#while
a <- 0
x <- 1
x <- 1
while(x != 0){
print("Digite um valor!")
x <- scan()
print(paste("Você digitou o valor: ", x))
print("Digite o valor 0 para sair!")
}
names(dados)
names(dados)[5:6]
for(variavel in names(dados)[5:6]){
print(variavel)
}
for(variavel in names(dados)[5:6]){
aov_var <- aov(variavel ~ tratamento, data = dados)
var_anova <- anova(aov_var)
var_anova
}
head(dados)
str(dados)
dados$tratamento <- as.factor(dados$tratamento)
str(dados)
for(variavel in names(dados)[5:6]){
aov_var <- aov(variavel ~ tratamento, data = dados)
var_anova <- anova(aov_var)
var_anova
}
names(dados)
for(i in c(5, 6)){
variavel <- dados[, i]
trat <- dados[, 7]
aov_var <- aov(variavel ~ trat)
var_anova <- anova(aov_var)
var_anova
}
for(i in c(5, 6)){
variavel <- dados[, i]
trat <- dados[, 7]
aov_var <- aov(variavel ~ trat)
var_anova <- anova(aov_var)
print(var_anova)
}
a <- 1:10
a
a <- 1:10
for(k in a){
log_a <- log(k)
print(log_a)
}
cv <- function(x){
# x e um vetor numerico
cv <- sd(x)/mean(x) * 100
return(cv)
}
cv <- function(x){
# x e um vetor numerico
cv <- sd(x)/mean(x) * 100
return(cv)
}
cv(dados$altura)
cv(dados$altura)
#coeficiente de variacao
cv <- function(x){
# x e um vetor numerico
cv <- sd(x)/mean(x) * 100
return(cv)
}
calc_vol <- function(alt, dap, ff=0.51){
vol <- dap^2*pi/40000*alt*ff
return(vol)
}
calc_vol <- function(alt, dap, ff=0.51){
vol <- dap^2*pi/40000*alt*ff
return(vol)
}
calc_vol <- function(alt, dap, ff=0.51){
vol <- dap^2*pi/40000*alt*ff
return(vol)
}
calc_vol(15, 12)
calc_vol(15, 12, 0.65)
calc_vol(dados$altura, dados$dap)
calc_vol(dados$altura, dados$dap, 0.65)
graph.4 <- graph.3 +
geom_histogram()
#Histograma
graph.3 <- ggplot(data = df3, aes(x = dap))
library(ggplot2)
#Histograma
graph.3 <- ggplot(data = df3, aes(x = dap))
graph.4 <- graph.3 +
geom_histogram()
graph.4
graph.4 <- graph.3 +
geom_histogram(bins = 15)
graph.4
graph.4 <- graph.3 +
geom_histogram(binwidth = .3)
graph.4
graph.4 <- graph.3 +
geom_histogram(binwidth = .6)
graph.4
graph.4 <- graph.3 +
geom_histogram(binwidth = .8)
graph.4
graph.4 <- graph.3 +
geom_histogram(binwidth = .9)
graph.4
graph.4 <- graph.3 +
geom_histogram()
graph.4
graph.4 <- graph.3 +
geom_histogram(bins = 15, colour = "darkblue",
fill = "darkgreen")
graph.4
graph.5 <- graph.3 +
geom_density(colour = "darkblue",
fill = "lightblue", alpha = .5)
graph.5
library(gridExtra)
grid.arrange(graph.1, graph.3, graph.4, graph.5)
graph <- ggplot(data = df3, aes(y = volume, x = dap))
graph.1 <- graph +
geom_point(size = 3, shape = 21, colour = "blue", fill = "green")
graph <- ggplot(data = df3, aes(y = volume, x = dap))
graph.1 <- graph +
geom_point(size = 3, shape = 21, colour = "blue", fill = "green")
grid.arrange(graph.1, graph.3, graph.4, graph.5)
graph.4 <- graph.3 +
geom_histogram(bins = 15, colour = "darkblue",
fill = "darkgreen")
graph.4
grid.arrange(graph.1, graph.3, graph.4, graph.5)
grid.arrange(graph.2, graph.1, graph.4, graph.5)
graph.2 <- ggplot(data = df3, aes(y = volume, x = dap,
color = espacamento)) +
geom_point(size = 3)
grid.arrange(graph.1, graph.2, graph.4, graph.5)
grid.arrange(graph.1, graph.2, graph.4, graph.5, ncol=1)
vol.e <- tapply(df3$volume, df3$espacamento, mean)
vol.e
unique(df3$arvoresh)
names(vol.e)
df.vol <- data.frame(espacamento = names(vol.e),
vol_ha = vol.e * arv.h)
arv.h <- unique(df3$arvoresh)
df.vol <- data.frame(espacamento = names(vol.e),
vol_ha = vol.e * arv.h)
df.vol
unname(vol.e)
df.vol <- data.frame(espacamento = names(vol.e),
vol_ha = unname(vol.e) * arv.h)
df.vol
df.vol <- data.frame(espacamento = names(vol.e),
vol_ha = vol.e * arv.h)
df.vol
graph.6 <- ggplot(data = df.vol, aes(x = espacamento,
y = vol_ha)) +
geom_bar()
graph.6
graph.6 <- ggplot(data = df.vol, aes(x = espacamento,
y = vol_ha)) +
geom_bar(stat = "identity")
graph.6
graph.6 <- ggplot(data = df.vol, aes(x = espacamento,
y = vol_ha)) +
geom_bar(stat = "identity",
fill = c("#BC8F8F", "#CD853F", "#D2691E",
"#F4A460"), width = .8) +
coord_flip()
graph.6
#box plot
graph.7 <- ggplot(data = df3, aes(y = volume,
x = espacamento,
fill = espacamento)) +
geom_boxplot()
graph.7
graph.1
graph.p1 <- graph.1 +
scale_y_continuous(limits = c(0, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0, 0))
graph.p1
graph.p1 <- graph.1 +
scale_y_continuous(limits = c(0, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0, 0)) +
scale_x_continuous(limits = c(6, 16),
breaks = seq(6, 16, 1),
expand = c(0, 0))
graph.p1
graph.p1 <- graph.1 +
scale_y_continuous(limits = c(0, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0, 0)) +
scale_x_continuous(limits = c(6, 16),
breaks = seq(6, 16, 1),
expand = c(0, 0)) +
xlab("Diâmetro a Altura do Peito -DAP (cm)") +
ylab("Volume por árvore (m³)")
graph.p1 <- graph.1 +
scale_y_continuous(limits = c(0, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0, 0)) +
scale_x_continuous(limits = c(6, 16),
breaks = seq(6, 16, 1),
expand = c(0, 0)) +
xlab("Diâmetro a Altura do Peito -DAP (cm)") +
ylab("Volume por árvore (m³)") +
ggtitle("Gráfico de Dispersão")
graph.p1
graph.p1 <- graph.1 +
scale_y_continuous(limits = c(0, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0, 0)) +
scale_x_continuous(limits = c(6, 16),
breaks = seq(6, 16, 1),
expand = c(0, 0)) +
xlab("Diâmetro a Altura do Peito -DAP (cm)") +
ylab("Volume por árvore (m³)") +
ggtitle("Gráfico de Dispersão") +
theme_bw()
graph.p1
graph.p1 <- graph.1 +
scale_y_continuous(limits = c(0, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0, 0)) +
scale_x_continuous(limits = c(6, 16),
breaks = seq(6, 16, 1),
expand = c(0, 0)) +
xlab("Diâmetro a Altura do Peito -DAP (cm)") +
ylab("Volume por árvore (m³)") +
ggtitle("Gráfico de Dispersão") +
theme_classic()
graph.p1
graph.p1 <- graph.1 +
scale_y_continuous(limits = c(0, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0, 0)) +
scale_x_continuous(limits = c(6, 16),
breaks = seq(6, 16, 1),
expand = c(0, 0)) +
xlab("Diâmetro a Altura do Peito -DAP (cm)") +
ylab("Volume por árvore (m³)") +
ggtitle("Gráfico de Dispersão") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5, size = 14))
graph.p1
graph.p1 <- graph.1 +
scale_y_continuous(limits = c(0, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0, 0)) +
scale_x_continuous(limits = c(6, 16),
breaks = seq(6, 16, 1),
expand = c(0, 0)) +
xlab("Diâmetro a Altura do Peito -DAP (cm)") +
ylab("Volume por árvore (m³)") +
ggtitle("Gráfico de Dispersão") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5, size = 16),
text = element_text(family = "Times New Roman", size = 16))
